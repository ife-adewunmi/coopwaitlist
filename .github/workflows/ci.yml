name: PR tests
on:
  pull_request:
    types: [ready_for_review]

jobs:
  log-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/github-script@v7
        with:
          script: |
            const output = `Test started by: @${{ github.actor }} on ${{ github.event_name }}`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })

  tests-action:
    name: Test
    uses: ./.github/workflows/tests-action.yml
    with:
      WORKING_DIRECTORY: ./
    

    # steps:
    #   - name: Checkout repository
    #     uses: actions/checkout@v3
    #     with:
    #       fetch-depth: 0

    #   - name: Set up Node
    #     uses: actions/setup-node@v3
    #     with:
    #       node-version: lts/*

    #   - name: Cache node modules
    #     uses: actions/cache@v3
    #     with:
    #       path: ~/.cache/yarn
    #       key: ${{ runner.os }}-node-${{ hashFiles('**/yarn.lock') }}
    #       restore-keys: |
    #         ${{ runner.os }}-node-

    #   - name: Get yarn cache directory path
    #     id: yarn-cache-dir-path
    #     run: echo "::set-output name=dir::$(yarn config get cacheFolder)"

    #   - uses: actions/cache@v3
    #     id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
    #     with:
    #       path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
    #       key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
    #       restore-keys: |
    #         ${{ runner.os }}-yarn-

    #   - name: Install dependencies
    #     run: yarn install

    #   - name: Build app
    #     run: yarn build

    #   - name: Check types
    #     run: yarn ts:check

    #   - name: Check linting
    #     run: yarn lint

    #   - name: Check Code Style
    #     run: yarn format:fix:src

#      - name: Test
#        run: yarn test -- -u
